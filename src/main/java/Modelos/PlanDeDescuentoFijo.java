/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modelos;

import BaseDeDatos.ConexionMySQL;
import java.awt.event.ActionEvent;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;



public class PlanDeDescuentoFijo extends javax.swing.JFrame {

    /**
     * Creates new form PlanDeDescuento
     */
    DefaultTableModel modelo;
    private String UID;
    public PlanDeDescuentoFijo(String userId) {
        this.setExtendedState(this.getExtendedState() | this.MAXIMIZED_BOTH);
        initComponents();
        UID=userId;
        habilitar();
        txtMotivoSNC.setText("");
        btnGrpIva.add(rbIVA21);
        btnGrpIva.add(rbIVA10);
        rbIVA21.setSelected(true);
        prepcmbDevs();
        
        inhabilitar();
        
        //System.out.println("userID: "+userId);
        txtMotivoSNC.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
              updateCombo();
            }
            public void removeUpdate(DocumentEvent e) {
              updateCombo();
            }
            public void insertUpdate(DocumentEvent e) {
              updateCombo();
            }

            public void updateCombo() {
                ConexionMySQL mysql= new ConexionMySQL();
                Connection cn= mysql.Conectar();

                String sSQL="", idMotiv="";
                idMotiv= txtMotivoSNC.getText();

                sSQL= "select descripcion from motivo_snc where idmotivo_snc = '"+idMotiv+"' and tipo=0";

                try
                {
                    Statement st= cn.createStatement();
                    ResultSet rs= st.executeQuery(sSQL);
                    if (rs.next())
                        try {
                            jcomMotivo.setSelectedItem(rs.getString("descripcion")); 
                        } catch (IllegalStateException e) {}
                    else
                        jcomMotivo.setSelectedItem(null);
                }
                catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
        });
        txtIdProveedor.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
              updateCombo();
            }
            public void removeUpdate(DocumentEvent e) {
              updateCombo();
            }
            public void insertUpdate(DocumentEvent e) {
              updateCombo();
            }

            public void updateCombo() {
                ConexionMySQL mysql= new ConexionMySQL();
                Connection cn= mysql.Conectar();

                String sSQL="", idProv="";
                idProv= txtIdProveedor.getText();

                sSQL = "select pr.razon_social as razon from proveedor as pr where pr.idproveedor = '"+idProv+"'";

                try
                {
                    Statement st= cn.createStatement();
                    ResultSet rs= st.executeQuery(sSQL);
                    if (rs.next())
                    {
                        try {
                            jcomProveedor.setSelectedItem(rs.getString("razon")); 
                        } catch (IllegalStateException e) {}
                    }
                    else
                        jcomProveedor.setSelectedItem(null);
                }
                catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
        });
    }
    private void prepcmbDevs(){
        cmbDevMes.removeAllItems();
        for(Integer cont=1;cont<=31;cont++){
            cmbDevMes.addItem(cont.toString());
        }
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpIva = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jlbProveedor = new javax.swing.JLabel();
        txtIdProveedor = new javax.swing.JTextField();
        jlbImporte = new javax.swing.JLabel();
        rbIVA21 = new javax.swing.JRadioButton();
        rbIVA10 = new javax.swing.JRadioButton();
        jlbCuotas = new javax.swing.JLabel();
        jlbSector = new javax.swing.JLabel();
        jlbMotivoSNC = new javax.swing.JLabel();
        txtMotivoSNC = new javax.swing.JTextField();
        jlbObsProveedor = new javax.swing.JLabel();
        txtObsProveedor = new javax.swing.JTextField();
        jlbObsComprador = new javax.swing.JLabel();
        txtObsComprador = new javax.swing.JTextField();
        btnNuevoPlan = new javax.swing.JButton();
        btnConsultasPlan = new javax.swing.JButton();
        jcomProveedor = new javax.swing.JComboBox<>();
        jcomMotivo = new javax.swing.JComboBox<>();
        jCheckArticulo = new javax.swing.JCheckBox();
        lblCuota = new javax.swing.JLabel();
        btnCalcular = new javax.swing.JButton();
        ComboCuotas = new javax.swing.JComboBox<>();
        txtImporte = new javax.swing.JTextField();
        lblPesos = new javax.swing.JLabel();
        dpFInicio = new org.jdesktop.swingx.JXDatePicker();
        dpFFin = new org.jdesktop.swingx.JXDatePicker();
        lblVigencia = new javax.swing.JLabel();
        lblFInicio = new javax.swing.JLabel();
        lblFFin = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblTitDev = new javax.swing.JLabel();
        lblTitDevMes = new javax.swing.JLabel();
        cmbDevMes = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        lblCompN = new javax.swing.JLabel();
        lblCompName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbModoCancelacion = new javax.swing.JComboBox<>();
        cmbImpacto = new javax.swing.JComboBox<>();
        txtModoCancelacion = new javax.swing.JLabel();
        txtModoImpacto = new javax.swing.JLabel();
        txtCanal = new javax.swing.JLabel();
        cmbCanal = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCuotasVisual = new javax.swing.JTable();
        btnConfirmar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnSinArticulos = new javax.swing.JButton();

        setTitle("Plan De Bonificaciones");
        setPreferredSize(new java.awt.Dimension(1366, 768));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("PLAN IMPORTE FIJO- Alta"));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 768));

        jlbProveedor.setBackground(new java.awt.Color(51, 204, 0));
        jlbProveedor.setText("Proveedor:");

        jlbImporte.setText("Importe:");

        rbIVA21.setText("IVA 21%");
        rbIVA21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbIVA21ActionPerformed(evt);
            }
        });

        rbIVA10.setText("IVA 10.5 %");
        rbIVA10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbIVA10ActionPerformed(evt);
            }
        });

        jlbCuotas.setText("Cuotas: ");

        jlbSector.setText("-");

        jlbMotivoSNC.setText("Motivo SNC:");

        jlbObsProveedor.setText("Obs. Proveedor:");

        txtObsProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtObsProveedorActionPerformed(evt);
            }
        });

        jlbObsComprador.setText("Obs. Comprador: ");

        btnNuevoPlan.setText("Nuevo Plan");
        btnNuevoPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoPlanActionPerformed(evt);
            }
        });

        btnConsultasPlan.setText("Consultas");
        btnConsultasPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultasPlanActionPerformed(evt);
            }
        });

        jcomProveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcomProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomProveedorActionPerformed(evt);
            }
        });

        jcomMotivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcomMotivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomMotivoActionPerformed(evt);
            }
        });

        jCheckArticulo.setText("Por Art√≠culo");
        jCheckArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckArticuloActionPerformed(evt);
            }
        });

        lblCuota.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCuota.setText("Cuota:");

        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        ComboCuotas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        ComboCuotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboCuotasActionPerformed(evt);
            }
        });

        txtImporte.setText("0.00");
        txtImporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImporteActionPerformed(evt);
            }
        });

        lblPesos.setText("$");

        lblVigencia.setText("Vigencia del Plan:");

        lblFInicio.setText("Fecha Inicio:");

        lblFFin.setText("Fecha Fin:");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTitDev.setText("Devengamiento:");

        lblTitDevMes.setText("Dia del Mes:");

        cmbDevMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitDevMes)
                            .addComponent(cmbDevMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblTitDev))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(lblTitDev)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTitDevMes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbDevMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Comprador:");

        lblCompN.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCompN.setText("[N]");

        lblCompName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCompName.setText("[COMP_NAME]");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("-");

        cmbModoCancelacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbModoCancelacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbModoCancelacionActionPerformed(evt);
            }
        });

        cmbImpacto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbImpacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbImpactoActionPerformed(evt);
            }
        });

        txtModoCancelacion.setText("Modo de Cancelaci√≥n");

        txtModoImpacto.setText("Modo de Impacto");

        txtCanal.setText("Canal");

        cmbCanal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCanal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCanalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcomProveedor, 0, 1047, Short.MAX_VALUE)
                            .addComponent(jcomMotivo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(93, 93, 93))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(lblVigencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(596, 596, 596))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlbImporte)
                                    .addComponent(jlbCuotas)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jlbSector)
                                        .addGap(4, 4, 4)))
                                .addGap(223, 223, 223)
                                .addComponent(rbIVA21)
                                .addGap(18, 18, 18)
                                .addComponent(rbIVA10)
                                .addGap(42, 42, 42)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtModoCancelacion)
                                    .addComponent(cmbModoCancelacion, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtModoImpacto)
                                    .addComponent(cmbImpacto, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCanal)
                                    .addComponent(cmbCanal, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblCuota)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCalcular)
                                .addGap(560, 560, 560))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlbObsProveedor)
                                    .addComponent(jlbObsComprador))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtObsComprador)
                                    .addComponent(txtObsProveedor)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblFInicio)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dpFInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblFFin)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dpFFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblPesos)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jlbMotivoSNC)
                                        .addGap(36, 36, 36))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jlbProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ComboCuotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMotivoSNC, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnNuevoPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnConsultasPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jCheckArticulo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(lblCompN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jLabel2)
                        .addGap(16, 16, 16)
                        .addComponent(lblCompName, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(48, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNuevoPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConsultasPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckArticulo)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lblCompN)
                            .addComponent(lblCompName)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbMotivoSNC)
                            .addComponent(txtMotivoSNC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcomMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbProveedor)
                            .addComponent(jcomProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(jlbImporte)
                        .addGap(14, 14, 14)
                        .addComponent(jlbCuotas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlbSector))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtImporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPesos)
                            .addComponent(rbIVA21)
                            .addComponent(rbIVA10)
                            .addComponent(txtModoCancelacion))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ComboCuotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbModoCancelacion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtModoImpacto)
                        .addGap(2, 2, 2)))
                .addGap(1, 1, 1)
                .addComponent(cmbImpacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCanal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbCanal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblVigencia)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dpFInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dpFFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblFInicio)
                        .addComponent(lblFFin))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbObsProveedor)
                    .addComponent(txtObsProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbObsComprador)
                    .addComponent(txtObsComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCuota)
                    .addComponent(btnCalcular))
                .addContainerGap())
        );

        tblCuotasVisual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblCuotasVisual);

        btnConfirmar.setText("Confirmar Y Seleccionar Articulos");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnSinArticulos.setText("Confirmar");
        btnSinArticulos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSinArticulosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnSinArticulos, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 920, Short.MAX_VALUE)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1380, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfirmar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSinArticulos, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        jPanel1.getAccessibleContext().setAccessibleName("PLAN IMPORTE FIJO");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcomClaseProveedorMenu()
    {
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        String sSQL="";
        sSQL= "SELECT razon_social FROM proveedor order by 1";
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            jcomProveedor.addItem("");
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                this.jcomProveedor.addItem(rs.getString("razon_social"));   
            }               
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } 
    }
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // BOT√ìN DE SALIR
        PlanDeDescuentoFijo.this.dispose();       
    }//GEN-LAST:event_btnSalirActionPerformed
    ////CLASE PARA CALCULAR QUE TIPO DE IVA
    String getIVA(){
       String iva="";
         if (rbIVA10.isSelected()== true){
             iva="3";}
        else{
             if (rbIVA21.isSelected()== true)
             { iva="2";}
             else{
                 iva="1";
             }
        }
        
        return iva;
    }
    String calcularIVA(BigDecimal cuota)
    {
        String monto="";
        double resultado=0;
        BigDecimal resultadoBD= new BigDecimal(0);
        if (getIVA()=="2"){
            //monto= txtImporte.getText();
            //resultado= cuota;
            resultadoBD=cuota.multiply(new BigDecimal(0.21));
            //resultado= (resultado*0.21);
            //monto=String.format("%.2f", resultado);
           
        }
        else {
            if (getIVA()=="3"){
                //monto= txtImporte.getText();
                resultadoBD=cuota.multiply(new BigDecimal(0.105));
                /*resultado= cuota;
                resultado= (resultado*0.105);
                monto=String.format("%.2f", resultado);
                */
                   
            }
            else{
                if (getIVA()=="1"){
                     //monto= txtImporte.getText();
                     
                     resultadoBD = cuota;
                     //resultado=(resultado*0.0);
                     //monto=String.format("%.2f", resultado);
                                    
                }
               }
            }
                resultadoBD=resultadoBD.setScale(2, BigDecimal.ROUND_UP);
                monto=resultadoBD.toString();    
    return monto;}
    
    
    String accion="Insertar";
    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
       //conexi√≥n a la bdd
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        ///FECHA ACTUAL
        java.util.Date date = new java.util.Date();
        java.text.SimpleDateFormat sdf=new java.text.SimpleDateFormat("yyyy-MM-dd");
        String fecha = sdf.format(date);
        
        ///STRING A UTILIZAR
        String idProve="", tipoDePlan="",fechaActual="",importe="0", cuotas="0", idComprador="",idSector="";
        String motivoSNC="",descuento="0", descDescripcion="", obsComprador="", obsProveedor="",tipoIVA="0", idArt="0";
      // cantCopias="0"
        String sSQL="";
        String mensaje;
       ///campos a cargar
        idProve=txtIdProveedor.getText();
        tipoDePlan="FIJO";
        fechaActual= fecha;
        System.out.println("FECHA: "+fecha);
        importe=txtImporte.getText();
        cuotas=ComboCuotas.getSelectedItem().toString();
        //idComprador= txtComprador.getText();
        idComprador= lblCompN.getText();
        idSector="0";
        motivoSNC= txtMotivoSNC.getText();
        obsProveedor= txtObsProveedor.getText();
        obsComprador=txtObsComprador.getText();
        tipoIVA=getIVA();
        ///verifico que no se envie un articulo no elegido
        if (this.jCheckArticulo.isSelected()==true){
             idArt=null;}
        else {
            idArt=null;
        }
        //cantCopias=txtCantCopias.getText ();
        
        
        ///creamos la consulta sql
        if (accion.equals("Insertar"))
        {
            sSQL="INSERT INTO plan_descuento (Proveedor_idproveedor, tipo_plan,aplicacion,dia_devengamiento,fechaActual, importe,"
                    + " cuotas, Usuario_idusuario,Sector_idsector,Motivo_SNC_idMotivo_SNC, descuento,"
                    + "descuento_descripcion,obs_Proveedor, obs_Comprador, tipo_IVA_idtipo_IVA, Articulo_idArticulo) "+
                "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            
           mensaje="Operaci√≥n Satisfactoria";
        }
       
        
        try 
        {
            PreparedStatement pst= cn.prepareStatement(sSQL);
            pst.setString(1, idProve );
            pst.setString(2, tipoDePlan);
            pst.setString(3, "Mensual");
            pst.setString(4, cmbDevMes.getSelectedItem().toString());
            pst.setString(5, fechaActual);
            pst.setString(6, importe);
            pst.setString(7, cuotas);
            pst.setString(8, idComprador);
            pst.setString(9, idSector);
            pst.setString(10, motivoSNC);
            pst.setString(11, descuento);
            pst.setString(12,descDescripcion);
            pst.setString(13,obsProveedor);
            pst.setString(14,obsComprador);
            pst.setString(15,tipoIVA);
            pst.setString(16, idArt);
            int n = pst.executeUpdate();
            guardarCuotas(cn);
            if (n>0)
            {    
                mensaje="Operaci√≥n Satisfactoria"; 
                JOptionPane.showMessageDialog(null, mensaje);
               // CargarTablaCuotas("");
                habilitar();//habilita los campos para la carga de datos
                inhabilitar();
                //PASAR COMO PARAMETRO UNA VARIABLE
                System.out.println("Seleccionando articulos de proveedor" + idProve);
                SeleccionArticulos ventanaArticulos= new SeleccionArticulos(idProve);
                //ventanaArticulos.setExtendedState(JFrame.MAXIMIZED_BOTH);
                ventanaArticulos.setVisible(true);
           
            }else{
                mensaje="Error"; 
                JOptionPane.showMessageDialog(null, mensaje);
            }
            
            
            
            
        } 
        
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed
//SE TUVO QUE HACER ESTA CLASE PARA GUARDAR LAS CUOTAS EN UNA ENTIDAD CUOTA. 
 //PIDEN QUE ALL√Å UN ALARMA PARA QUE DIGA QUE CUOTA SE VENCE O NO.
    private void guardarCuotas(Connection cn)
    {
        String ultimoId="";
        String sSQLid="", sSQL="";
        
        ////Guardamos consulta para ultimo id.
        sSQLid="SELECT LAST_INSERT_ID(idPlan_Descuento) AS ProximoIdAInsertar FROM plan_descuento ORDER BY idPlan_Descuento DESC LIMIT 1";
        
        try 
        {
        PreparedStatement pst= cn.prepareStatement(sSQLid);
        ResultSet resultado= pst.executeQuery();
        while (resultado.next()) { //Es mas correcto poner el next en el while, te hace lo mismo que tenias en tu antiguo codigo pero en menos lineas y mas limpio
              ultimoId = resultado.getString("ProximoIdAInsertar");
              }
        System.out.println(ultimoId);
        ///obtenemos cantidad de valores en la jtable
        for (int i=0; i< tblCuotasVisual.getRowCount(); i++)
        {
            PreparedStatement pst2= cn.prepareStatement("INSERT INTO cuota (nro_cuota, importe, IVA, fecha, plan_descuento_idPlan_Descuento) VALUES (?,?,?,?,?) ");
            pst2.setString(1, (String.valueOf((i+1))));
            System.out.println(tblCuotasVisual.getValueAt(i, 0).toString());
            pst2.setString(2, tblCuotasVisual.getValueAt(i, 1).toString());
            pst2.setString(3, tblCuotasVisual.getValueAt(i, 2).toString());
            pst2.setString(4, tblCuotasVisual.getValueAt(i, 3).toString());
            pst2.setString(5, ultimoId);
            pst2.executeUpdate();
        }
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        
        }
    
    
    }
    
    ///BOTON PARA GUARDAR EL PLAN FIJO SIN LA OPCION DE ELEGIR ARTICUOLOS
    private void btnSinArticulosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSinArticulosActionPerformed
        //conexi√≥n a la bdd
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        ///FECHA ACTUAL
        java.util.Date date = new java.util.Date();
        java.text.SimpleDateFormat sdf=new java.text.SimpleDateFormat("yyyy-MM-dd");
        String mensaje,fechaInicio,fechaFin, fecha, sSQL;
        fecha = sdf.format(date);
        ///STRING A UTILIZAR
        String idProve="", tipoDePlan="",fechaActual="",importe="0", cuotas="0", idComprador="",idSector="";
        String motivoSNC="",descuento="0", descDescripcion="", obsComprador="", obsProveedor="",tipoIVA="0", idArt="0";
        String mCancelacion="", mImpacto="", mCanal="";
       
        String estado="PENDIENTE";
        String situacion="ACTIVO";
        
       /// cantCopias="0"
        sSQL="";
        fechaInicio=null;
        fechaFin=null;
       ///campos a cargar
        if(dpFInicio.getDate()!=null){
            fechaInicio = sdf.format(dpFInicio.getDate());
        }else{
            fechaInicio = fecha;
        }
        if(dpFFin.getDate()!=null){
            fechaFin = sdf.format(dpFFin.getDate());
        }
        idProve=txtIdProveedor.getText();
        tipoDePlan="FIJO";
        //System.out.println("FECHA" + fecha);
        fechaActual= fecha;
        importe=txtImporte.getText();
        cuotas=ComboCuotas.getSelectedItem().toString();
        idComprador= lblCompN.getText();
        //idComprador= txtComprador.getText();
        //idSector=txtSector.getText();
        idSector="0";
        motivoSNC= txtMotivoSNC.getText();        
        obsProveedor= txtObsProveedor.getText();
        obsComprador=txtObsComprador.getText();
        mCancelacion=cmbModoCancelacion.getSelectedItem().toString();
        mImpacto=cmbImpacto.getSelectedItem().toString();
        mCanal=cmbCanal.getSelectedItem().toString();
        tipoIVA=getIVA();
        ///verifico que no se envie un articulo no elegido
        if (this.jCheckArticulo.isSelected()==true){
             idArt=null;}
        else {
            idArt=null;
        }
        //cantCopias=txtCantCopias.getText ();
        
        
        ///creamos la consulta sql
        if (accion.equals("Insertar"))
        {
            sSQL="INSERT INTO plan_descuento (Proveedor_idproveedor, tipo_plan,aplicacion,dia_devengamiento,fechaActual, importe,"
                    + " cuotas, fecha_devengamiento_Desde,fecha_Devengamiento_Hasta, Usuario_idusuario,Sector_idsector,Motivo_SNC_idMotivo_SNC, descuento,"
                    + " descuento_descripcion,obs_Proveedor, obs_Comprador, tipo_IVA_idtipo_IVA, Articulo_idArticulo,estado, situacion, "
                    + " Modo_Cancelacion ,Modo_Impacto, Modo_Canal) " 
                + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
           mensaje="Operaci√≥n Satisfactoria";
        }
        /*
        else if (accion.equals("Modificar"))
        {
            sSQL="UPDATE articulo " +
                 "SET idArticulo= ?," +
                 "descripcion= ?, "+
                 "unidad_de_venta= ?, " +
                 "fecha_ingreso_inicial= ?, " +
                 "precio_costo= ? ," +
                 "precio_vigente= ? ," +
                 "margen=?," +   
                 "proveedor_idproveedor= ? , "+
                 "cantidad_total= ? " +  
                 "WHERE idArticulo= " + id_actualizar;
            mensaje="Operaci√≥n Satisfactor√≠a";
        }
        */
        
        try 
        {
            PreparedStatement pst= cn.prepareStatement(sSQL);
            pst.setString(1, idProve );
            pst.setString(2, tipoDePlan);
            pst.setString(3, "Mensual");
            pst.setString(4, cmbDevMes.getSelectedItem().toString());
            pst.setString(5, fechaActual);
            pst.setString(6, importe);
            pst.setString(7, cuotas);
            pst.setString(8, fechaInicio);
            pst.setString(9, fechaFin);
            pst.setString(10, idComprador);
            pst.setString(11, idSector);
            pst.setString(12, motivoSNC);
            pst.setString(13, descuento);
            pst.setString(14,descDescripcion);
            pst.setString(15,obsProveedor);
            pst.setString(16,obsComprador);
            pst.setString(17,tipoIVA);
            pst.setString(18, idArt);
            pst.setString(19, estado);
            pst.setString(20, situacion);
            pst.setString(21,mCancelacion);
            pst.setString(22,mImpacto);
            pst.setString(23,mCanal);
            int n = pst.executeUpdate();
            guardarCuotas(cn);
            if (n>0)
            {    
                mensaje="Operaci√≥n Satisfactoria";
                
                JOptionPane.showMessageDialog(null, mensaje);
               // CargarTablaCuotas("");
                habilitar();//habilita los campos para la carga de datos
                inhabilitar();
                ConsultaPlanes ventanaConsulta= new ConsultaPlanes(UID);
                ventanaConsulta.setExtendedState(JFrame.MAXIMIZED_BOTH);
                ventanaConsulta.setVisible(true);
           
            }
            
        } 
        
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_btnSinArticulosActionPerformed

    private void txtImporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImporteActionPerformed
        try {
            // TODO add your handling code here:
            cargarTablaCuotas();
        } catch (ParseException ex) {
            Logger.getLogger(PlanDeDescuentoFijo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtImporteActionPerformed

    private void ComboCuotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboCuotasActionPerformed
        try {
            // TODO add your handling code here:
            cargarTablaCuotas();
        } catch (ParseException ex) {
            Logger.getLogger(PlanDeDescuentoFijo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ComboCuotasActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        try {
            cargarTablaCuotas();
        } catch (ParseException ex) {
            Logger.getLogger(PlanDeDescuentoFijo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void jCheckArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckArticuloActionPerformed
        if (jCheckArticulo.isSelected()==true){
            //txtArticulo.setEnabled(true);
            //jcomArticulo.setEnabled(true);
            //jlbArticulo.setEnabled(true);
            btnConfirmar.setEnabled(true);
            btnSinArticulos.setEnabled(false);
            //this.jcomArticulo.removeAllItems();
            //jcomClaseArticulo();

        }
        else {
            //txtArticulo.setEnabled(false);
            //jcomArticulo.setEnabled(false);
            //jlbArticulo.setEnabled(false);
            //txtArticulo.setText(null);
            btnConfirmar.setEnabled(false);
            btnSinArticulos.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckArticuloActionPerformed

    private void jcomMotivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomMotivoActionPerformed
        ///realizamos la conexion con la bdd.

        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();

        ///ingresamos la consulta
        String sSQL="", motivo="";
        motivo=(String) jcomMotivo.getSelectedItem();

        sSQL= "select idmotivo_snc as id from motivo_snc where descripcion LIKE '%"+motivo+"%' and tipo=0";

        try
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);

            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                if (!jcomMotivo.getSelectedItem().toString().equals("")){
                    try {
                        txtMotivoSNC.setText(rs.getString("id"));
                    } catch (IllegalStateException e) {}
                }else{
                    txtMotivoSNC.setText("");
                }
            }

        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jcomMotivoActionPerformed

    private void jcomProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomProveedorActionPerformed
        ///realizamos la conexion con la bdd.
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        ///ingresamos la consulta
        String sSQL="", razon="";
        razon=(String) jcomProveedor.getSelectedItem();

        sSQL= "select pr.idproveedor as id from proveedor as pr where pr.razon_social LIKE '%"+razon+"%'";

        try
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);

            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                if(!jcomProveedor.getSelectedItem().toString().equals("")){
                    try {
                        txtIdProveedor.setText(rs.getString("id"));
                    } catch (IllegalStateException e) {}
                }else{
                    txtIdProveedor.setText("");
                }
                //this.jcomArticulo.removeAllItems();
                //jcomClaseArticulo();

            }
            //jcomProveedor.transferFocus();
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jcomProveedorActionPerformed

    //BOTON CONSULTAS Y NUEVO.
    private void btnConsultasPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultasPlanActionPerformed
       // System.out.println(UID);
        ConsultaPlanes ventanaConsulta= new ConsultaPlanes(UID);
        ventanaConsulta.setExtendedState(JFrame.MAXIMIZED_BOTH);
        ventanaConsulta.setVisible(true);
    }//GEN-LAST:event_btnConsultasPlanActionPerformed

    private void btnNuevoPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoPlanActionPerformed
        ///// HABILITA TODOS LOS PUNTOS NUEVAMENTE
        habilitar();
    }//GEN-LAST:event_btnNuevoPlanActionPerformed

    private void txtObsProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtObsProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtObsProveedorActionPerformed

//GEN-FIRST:event_rbIVA10ActionPerformed
    private void rbIVA10ActionPerformed(java.awt.event.ActionEvent evt) {                                        
      
    } 
//GEN-LAST:event_rbIVA10ActionPerformed

    private void rbIVA21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbIVA21ActionPerformed
      
    }//GEN-LAST:event_rbIVA21ActionPerformed

    private void cmbModoCancelacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbModoCancelacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbModoCancelacionActionPerformed

    private void cmbImpactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbImpactoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbImpactoActionPerformed

    private void cmbCanalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCanalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCanalActionPerformed

   /*private void jcomClaseArticulo(){
        
         ///realizamos la conexion con la bdd.
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="";
        String idProv=txtIdProveedor.getText();
        
        
        sSQL= "select descripcion from articulo where articulo.proveedor_idproveedor like  '%"+idProv+"%'";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                this.jcomArticulo.addItem(rs.getString("descripcion")); 
                
            }   
            
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        
    }*/
    
    
    
    private void jcomClaseMotivoMenu()
    {
        ///realizamos la conexion con la bdd.
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="";
        
        sSQL= "select descripcion from motivo_snc where tipo=0";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            jcomMotivo.addItem("");
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                this.jcomMotivo.addItem(rs.getString("descripcion")); 
            }               
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        
    }
    
    
    private void jcomClaseCompradorMenu()
    {
       ///realizamos la conexion con la bdd.
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="";
        
        sSQL= "select concat (apellido,\" \", nombre) as comprador from usuario where idUsuario='"+UID+"'";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                //this.jcomComprador.addItem(rs.getString("comprador")); 
                lblCompName.setText(rs.getString("comprador"));
                lblCompN.setText(UID);
            }               
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }      
    
    }
    
    
    private void loadCmbModoCancelacion(){
        cmbModoCancelacion.removeAllItems();
        this.cmbModoCancelacion.addItem("--SELECCIONAR--");
     
         String prov;
            //cadena a separar
            prov= cmbModoCancelacion.getSelectedItem().toString();
            //arreglo para guardar las cadenas separadas
            String[] parts=new String[3];
         
        ///ESTO DESCONCATENA EL STRING PROVEEDOR QUE VIENE CONCATENADO CON EL ID_PROV 
            
         if (!prov.equals("Item 1")){
                   int i=0;
                   parts[0]="NETEADO EN FACTURA";
                   parts[1]="NOTA DE CREDITO";
                   parts[2]="MERCADERIA SIN CARGO";
                   System.out.println(parts.length);
                   while (i<parts.length)///recorre cada valor de la consulta y la guarda en las variables.
                {
                        
                       String texto=(parts[i]);
                         this.cmbModoCancelacion.addItem(texto);
                         i++;
                    }
            }          
     
    }
    private void loadCmbImpacto(){
        cmbImpacto.removeAllItems();
        this.cmbImpacto.addItem("--SELECCIONAR--");
     
         String prov;
            //cadena a separar
            prov= cmbImpacto.getSelectedItem().toString();
            //arreglo para guardar las cadenas separadas
            String[] parts=new String[3];
         
        ///ESTO DESCONCATENA EL STRING PROVEEDOR QUE VIENE CONCATENADO CON EL ID_PROV 
            
         if (!prov.equals("Item 1")){
                   int i=0;
                   parts[0]="FORMADOR DE PRECIO";
                   parts[1]="RECUPERO ACCION";
                   parts[2]="INVERSI√ìN SOBRE COMPRA";
                   System.out.println(parts.length);
                   while (i<parts.length)///recorre cada valor de la consulta y la guarda en las variables.
                {
                        
                       String texto=(parts[i]);
                         this.cmbImpacto.addItem(texto);
                         i++;
                    }
            }          
     
    }
    private void loadCmbCanal(){
        cmbCanal.removeAllItems();
        this.cmbCanal.addItem("--SELECCIONAR--");
     
         String prov;
            //cadena a separar
            prov= cmbCanal.getSelectedItem().toString();
            //arreglo para guardar las cadenas separadas
            String[] parts=new String[5];
         
        ///ESTO DESCONCATENA EL STRING PROVEEDOR QUE VIENE CONCATENADO CON EL ID_PROV 
            
         if (!prov.equals("Item 1")){
                   int i=0;
                   parts[0]="MAYORISTA";
                   parts[1]="EESS";
                   parts[2]="SAN JUSTO";
                   parts[3]="TODAS LAS SUCURSALES";
                   parts[4]="TOTAL COMPA√ë√çA";
                   System.out.println(parts.length);
                   while (i<parts.length)///recorre cada valor de la consulta y la guarda en las variables.
                {
                        
                       String texto=(parts[i]);
                         this.cmbCanal.addItem(texto);
                         i++;
                    }
            }          
     
    }
 ///METODO QUE CARGA LA JTABLE CON LAS CUOTAS CALCULADAS   
    private void cargarTablaCuotas() throws ParseException
    {
        String sSQL="";
        //double cuota=0;
        double cuota;
        BigDecimal cuotaBD=new BigDecimal(0);
        int cantCuota=0;
        ///configuramos la tabla.
        String [] titulos= {"Cuota","Importe","IVA","Fecha de Debito"};
        String [] registro= new String[4];
        modelo = new DefaultTableModel(null,titulos);
        ///realizamos la conexion con la bdd.
        //ConexionMySQL mysql= new ConexionMySQL();
        //Connection cn= mysql.Conectar();
        ///ingresamos la consulta
        ///FECHA ACTUAL
        java.util.Date date = new java.util.Date();
        java.text.SimpleDateFormat sdf=new java.text.SimpleDateFormat("yyyy-MM-dd");
        String fecha = sdf.format(date);
        
        String importe="0";
        importe=txtImporte.getText();
        BigDecimal importeBD = new BigDecimal(txtImporte.getText());
        //cantCuota=Integer.parseInt(txtCuotas.getText());
        
        cantCuota=Integer.parseInt(ComboCuotas.getSelectedItem().toString());
        
       // cuota= (((Double.parseDouble(importe))/cantCuota));
        
        System.out.println("cantCuota: "+ cantCuota);
        System.out.println("importeBD: "+ importeBD);
        //System.out.println("BIG DECIMAL "+ importeBD.divide(new BigDecimal(cantCuota), 2, RoundingMode.HALF_UP));
        
        //System.out.println(num1.toString());
        
        cuotaBD=importeBD.divide(new BigDecimal(cantCuota), 2, RoundingMode.HALF_UP);
        //cuotaBD=importeBD.divide(cuotaBD, 0, RoundingMode.HALF_UP);
        System.out.println("big" + cuotaBD);
     //cuotaBD=importeBD.divide(cuotaBD,2, RoundingMode.HALF_EVEN);
      //   System.out.println(cuotaBD);
        //BigDecimal importeBD = new BigDecimal(txtImporte.getText());
        //cuotas=importeBD.divide(new BigDecimal(cantCuota));
        //importe=String.format("%.2f", cuota);
        //BigDecimal importeCUOTA=importeBD;
      //  System.out.println(cuota);
            //  Statement st= cn.createStatement();
            //ResultSet rs= st.executeQuery(sSQL);
            
            //while (rs.next())
           // {
           if (importe == ""){
                JOptionPane.showMessageDialog(null, "Ingrese Importe");
               
           }
           else {
               for(int i =1; i <= cantCuota ; i++ ) 
               {
                Calendar c = Calendar.getInstance();
                SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
                c.setTime(sdf1.parse(fecha));
                c.add(Calendar.MONTH, 1*i-1);
                registro[0]= ""+ i;
                registro[1]= cuotaBD.toString();
                registro[2]=calcularIVA(cuotaBD);
                //registro[3]=fecha;
                registro[3]=sdf1.format(c.getTime()).toString();
                modelo.addRow(registro);}
           } 
            // }
            tblCuotasVisual.setModel(modelo);
                        
     
        
    
    
    }
       
    /////////////////////////////////////////////////////////////////////////////
    //////////////CLASES PARA HABILITAR E INHABILITAR LOS MENUS//////////////////
    /////////////////////////////////////////////////////////////////////////////
    
    void habilitar()
    {
   //habilita cada opci√≥n
        
    /// CAMPOS DE TEXTO Y ETIQUETAS  
    lblCuota.setEnabled(true);
    lblVigencia.setEnabled(true);
    lblFInicio.setEnabled(true);
    lblFFin.setEnabled(true);
    dpFInicio.setEnabled(true);
    dpFFin.setEnabled(true);
    txtIdProveedor.setEnabled(true);
    lblPesos.setEnabled(true);
    lblTitDev.setEnabled(true);
    lblTitDevMes.setEnabled(true);
    cmbDevMes.setEnabled(true);
    ComboCuotas.setEnabled(true);
    jcomProveedor.setEnabled(true);
    jlbProveedor.setEnabled(true);
    txtImporte.setEnabled(true);
    jlbImporte.setEnabled(true);
    rbIVA21.setEnabled(true);
    rbIVA21.setSelected(true);
    rbIVA10.setEnabled(true);
    rbIVA10.setSelected(false);
    //txtCuotas.setEnabled(true);
    jlbCuotas.setEnabled(true);
    //txtComprador.setEnabled(true);
    //jcomComprador.setEnabled(true);
    txtModoImpacto.setEnabled(true);
    cmbImpacto.setEnabled(true);
    txtModoCancelacion.setEnabled(true);
    cmbModoCancelacion.setEnabled(true);
    txtCanal.setEnabled(true);
    cmbCanal.setEnabled(true);
    
    txtIdProveedor.setEnabled(true);
    jcomProveedor.setEnabled(true);
    jlbProveedor.setEnabled(true);
 
    jlbSector.setEnabled(true);
    txtMotivoSNC.setEnabled(true);
    jcomMotivo.setEnabled(true);
    jlbMotivoSNC.setEnabled(true);
    txtObsProveedor.setEnabled(true);
    jlbObsProveedor.setEnabled(true);
    txtObsComprador.setEnabled(true);
    jlbObsComprador.setEnabled(true);
    
    ///BOTONES Y ACCIONES
    btnSinArticulos.setEnabled(true);
   // btnConfirmar.setEnabled(true);
    
    btnCalcular.setEnabled(true);
  //  btnSeleccionArticulos.setEnabled(true);
    jlbCuotas.setEnabled(true);  
    jCheckArticulo.setEnabled(true);
    jCheckArticulo.setSelected(false);
    //jlbArticulo.setEnabled(false);
    //txtArticulo.setEnabled(false);
    //jcomArticulo.setEnabled(false);
    
    txtIdProveedor.requestFocus();///posiciona el cursor
    
    this.jcomProveedor.removeAllItems();
    //this.jcomComprador.removeAllItems();
    this.jcomMotivo.removeAllItems();
    
   // this.jcomArticulo.removeAllItems();
    
    //this.jcomArticulo.setSelectedItem(null);
    
     //vacia los campos en ""
    txtIdProveedor.setText("");   
    txtImporte.setText("0");
    //txtCuotas.setText("");
    //txtComprador.setText("");
    txtIdProveedor.setText("");
    
    txtMotivoSNC.setText("");
    txtObsProveedor.setText("");
    txtObsComprador.setText("");
    //txtArticulo.setText(null);
  
    eliminarTablaCuotas();
    


    
    jcomClaseProveedorMenu();
    jcomClaseCompradorMenu();
    
    jcomClaseMotivoMenu();
    loadCmbModoCancelacion();
    loadCmbImpacto();
    loadCmbCanal();
    //jcomClaseArticulo();
    
    
    }
    ///metodo para cancelar la carga de datos
   
    void inhabilitar(){
    //deshabilita cada opci√≥n
    
    ///CAMPOS DE TEXTOS Y ETIQUETAS
    lblVigencia.setEnabled(false);
    lblCuota.setEnabled(false);
    lblFInicio.setEnabled(false);
    lblFFin.setEnabled(false);
    dpFInicio.setEnabled(false);
    dpFFin.setEnabled(false);
    txtImporte.setHorizontalAlignment(SwingConstants.RIGHT);
    ComboCuotas.setEnabled(false);
    lblTitDev.setEnabled(false);
    lblTitDevMes.setEnabled(false);
    cmbDevMes.setEnabled(false);
    lblPesos.setEnabled(false);
    txtIdProveedor.setEnabled(false);
    jcomProveedor.setEnabled(false);
    jlbProveedor.setEnabled(false);
    txtImporte.setEnabled(false);
    jlbImporte.setEnabled(false);
    rbIVA21.setEnabled(false);
    rbIVA10.setEnabled(false);
    //txtCuotas.setEnabled(false);
    jlbCuotas.setEnabled(false);
    //txtComprador.setEnabled(false);
    //jcomComprador.setEnabled(false);
    txtModoImpacto.setEnabled(false);
    cmbImpacto.setEnabled(false);
    txtModoCancelacion.setEnabled(false);
    cmbModoCancelacion.setEnabled(false);
    txtCanal.setEnabled(false);
    cmbCanal.setEnabled(false);
 
    jlbSector.setEnabled(false);
    txtMotivoSNC.setEnabled(false);
    jcomMotivo.setEnabled(false);
    jlbMotivoSNC.setEnabled(false);
    txtObsProveedor.setEnabled(false);
    jlbObsProveedor.setEnabled(false);
    txtObsComprador.setEnabled(false);
    jlbObsComprador.setEnabled(false);

    ///BOTONES
    btnSinArticulos.setEnabled(false);
    btnConfirmar.setEnabled(false);

    btnCalcular.setEnabled(false);
    jCheckArticulo.setSelected(false);
    jCheckArticulo.setEnabled(false);
    //jlbArticulo.setEnabled(false);
    //txtArticulo.setEnabled(false);
    //jcomArticulo.setEnabled(false);
    
    eliminarTablaCuotas();
    
    
    this.jcomProveedor.removeAllItems();
    //this.jcomComprador.removeAllItems();
    this.jcomMotivo.removeAllItems();
 
    //this.jcomArticulo.removeAll();
    //vacia los campos en ""
    txtIdProveedor.setText("");   
    txtImporte.setText("0");
    //txtCuotas.setText("");
    //txtComprador.setText("");
    txtIdProveedor.setText("");
   
    txtMotivoSNC.setText("");
    txtObsProveedor.setText("");
    txtObsComprador.setText("");
    //txtArticulo.setText(null);
    //this.jcomArticulo.setSelectedItem(null);
    
  
    jlbCuotas.setEnabled(false);
    }
    
   public void eliminarTablaCuotas(){
        DefaultTableModel tb = (DefaultTableModel) tblCuotasVisual.getModel();
        int a = tblCuotasVisual.getRowCount()-1;
        for (int i = a; i >= 0; i--) {           
        tb.removeRow(tb.getRowCount()-1);
        } 
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlanDeDescuentoFijo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlanDeDescuentoFijo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlanDeDescuentoFijo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlanDeDescuentoFijo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            private String userId;
            public void run() {
                new PlanDeDescuentoFijo(userId).setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboCuotas;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnConsultasPlan;
    private javax.swing.ButtonGroup btnGrpIva;
    private javax.swing.JButton btnNuevoPlan;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnSinArticulos;
    private javax.swing.JComboBox<String> cmbCanal;
    private javax.swing.JComboBox<String> cmbDevMes;
    private javax.swing.JComboBox<String> cmbImpacto;
    private javax.swing.JComboBox<String> cmbModoCancelacion;
    private org.jdesktop.swingx.JXDatePicker dpFFin;
    private org.jdesktop.swingx.JXDatePicker dpFInicio;
    private javax.swing.JCheckBox jCheckArticulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcomMotivo;
    private javax.swing.JComboBox<String> jcomProveedor;
    private javax.swing.JLabel jlbCuotas;
    private javax.swing.JLabel jlbImporte;
    private javax.swing.JLabel jlbMotivoSNC;
    private javax.swing.JLabel jlbObsComprador;
    private javax.swing.JLabel jlbObsProveedor;
    private javax.swing.JLabel jlbProveedor;
    private javax.swing.JLabel jlbSector;
    private javax.swing.JLabel lblCompN;
    private javax.swing.JLabel lblCompName;
    private javax.swing.JLabel lblCuota;
    private javax.swing.JLabel lblFFin;
    private javax.swing.JLabel lblFInicio;
    private javax.swing.JLabel lblPesos;
    private javax.swing.JLabel lblTitDev;
    private javax.swing.JLabel lblTitDevMes;
    private javax.swing.JLabel lblVigencia;
    private javax.swing.JRadioButton rbIVA10;
    private javax.swing.JRadioButton rbIVA21;
    private javax.swing.JTable tblCuotasVisual;
    private javax.swing.JLabel txtCanal;
    private javax.swing.JTextField txtIdProveedor;
    private javax.swing.JTextField txtImporte;
    private javax.swing.JLabel txtModoCancelacion;
    private javax.swing.JLabel txtModoImpacto;
    private javax.swing.JTextField txtMotivoSNC;
    private javax.swing.JTextField txtObsComprador;
    private javax.swing.JTextField txtObsProveedor;
    // End of variables declaration//GEN-END:variables
}
